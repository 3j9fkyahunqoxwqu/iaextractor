<?xml-stylesheet href="chrome://global/skin/" type="text/css"?>
<?xml-stylesheet href="chrome://iaextractor/skin/tools.css" type="text/css"?>

<!DOCTYPE window SYSTEM "chrome://iaextractor/locale/tools2.dtd">

<window id="iaextractor-tools" 
  windowtype="iaextractor:tools"
  width="520px" 
  height="190px"
  title="&title;"
  persist="screenX screenY sizemode"
  xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul" 
  xmlns:html="http://www.w3.org/1999/xhtml" 
  xmlns:h="http://www.w3.org/1999/xhtml">

<script type="text/javascript">
/* This chrome window uses "lib/download.js" and "lib/extract.js" from addon-sdk 
 * library. This is a minimal implimentation of require function to prevent 
 * code duplications!
 */
exports = {};
var require = function (id) {
  if (id == "chrome") {
    return {
      Cc: Components.classes, 
      Ci :Components.interfaces, 
      Cu: Components.utils
    }
  }
  if (id == "sdk/timers") {
    return window;
  }
  if (id == "sdk/request") {
    return {Request: null}  //not being used here
  }
  if (id == "sdk/l10n") {
    return {
      get: function (id) {
        if (id == "err1" || id == "err2" || id == "err3" || id == "err4" || id == "err5" || id == "err6") {
          return bundle.getString(id.replace("err", "err1"));
        }
        else if (id == "err12" || id == "err13") {
          return bundle.getString(id.replace("err1", "err2"));
        }
        return bundle.getString("err17");
      }
    }
  }
  if (id == "sdk/simple-prefs") {
    var prefs = Components.classes["@mozilla.org/preferences-service;1"]
                        .getService(Components.interfaces.nsIPrefService);
    prefs = prefs.getBranch("extensions.feca4b87-3be4-43da-a1b1-137c24220968@jetpack.");
    return {
      prefs: new Proxy({}, {
        get: function(target, name) {
          switch (name) {
          case "ffmpegPath":
            try {
              return prefs.getComplexValue("ffmpegPath", Components.interfaces.nsISupportsString).data;
            }
            catch (e) {
              return "";
            }
          case "doRemux":
            return prefs.getBoolPref(name);
          default:
            try {
              return prefs.getCharPref(name);
            }
            catch (e) {
              return "";
            }
          }
        },
        set: function(target, name, value) {
          switch (name) {
          case "ffmpegPath":
            var str = Components.classes["@mozilla.org/supports-string;1"]
                  .createInstance(Components.interfaces.nsISupportsString);
            str.data = value;
            prefs.setComplexValue("ffmpegPath", Components.interfaces.nsISupportsString, str);
            break;
          case "doRemux":
            prefs.setBoolPref(name, value);
            break;
          default:
            prefs.setCharPref(name, value);
          }
        }
      })
    }
  }
}
</script>
<script src="resource://feca4b87-3be4-43da-a1b1-137c24220968-at-jetpack/iaextractor/lib/download.js"/>
<script src="resource://feca4b87-3be4-43da-a1b1-137c24220968-at-jetpack/iaextractor/lib/extract.js"/>
<script src="resource://feca4b87-3be4-43da-a1b1-137c24220968-at-jetpack/iaextractor/lib/ffmpeg.js"/>
<script src="tools.js"/>

<stringbundleset>
  <stringbundle id="bundle" src="chrome://iaextractor/locale/tools2.properties"/>
</stringbundleset>

<notificationbox id="notify" flex="1">
<tabbox id="tabbox" flex="1" selectedIndex="1" persist="selectedIndex">
  <tabs>
    <tab label="&aac-to-mp3;"/>
    <tab label="&flv-to-aac;"/>
    <tab label="&to-mp3;"/>
    <tab label="&mixer;"/>
  </tabs>
  <tabpanels flex="1">
    <tabpanel
      ondragenter="return drag1.checkDrag(event)"
      ondragover="return drag1.checkDrag(event)"
      ondrop="drag1.doDrop(event)">
      <vbox flex="1">
        <hbox pack="center" class="info">
          <label value="&drop1;"/>
        </hbox>
        <grid>
          <columns>
            <column/>
            <column flex="1"/>
          </columns>
          <rows>
            <row align="center">
              <image id="p1" class="item"/>
              <hbox align="center">
                <label value="&p1;"/>
                <menulist id="bitrate">
                  <menupopup>
                    <menuitem label="64K" value="64k"/>
                    <menuitem label="128K" value="128k" selected="true"/>
                    <menuitem label="192K" value="192k"/>
                    <menuitem label="256K" value="256k"/>
                    <menuitem label="320K" value="320k"/>
                  </menupopup>
                </menulist>
              </hbox>
            </row>
            <row align="center">
              <image id="p2" class="item"/>
              <label value="&p2;"/>
            </row>
            <row align="center">
              <image id="p3" class="item"/>
              <label value="&p3;"/>
            </row>
            <row align="center">
              <image id="p4" class="item"/>
              <hbox>
                <label value="&p4;"/>
                <label id="p4-2" value="-"/>
              </hbox>
            </row>
            <row align="center">
              <image id="p5" class="item"/>
              <label value="&p5;"/>
            </row>
          </rows>
        </grid>
      </vbox>
    </tabpanel>
    <tabpanel
      ondragenter="return drag2.checkDrag(event)"
      ondragover="return drag2.checkDrag(event)"
      ondrop="drag2.doDrop(event)">
      <vbox flex="1">
        <hbox pack="center" class="info">
          <label value="&drop2;"/>
        </hbox>
        <vbox flex="1" pack="center">
          <progressmeter id="extract-progressmeter" mode="determined" collapsed="true"/>
        </vbox>
      </vbox>
      </tabpanel>
    <tabpanel
      ondragenter="return drag3.checkDrag(event)"
      ondragover="return drag3.checkDrag(event)"
      ondrop="drag3.doDrop(event)">
      <vbox flex="1">
        <hbox align="center">
          <label value="&ffmpeg-path;"/>
          <textbox id= "ffmpeg-path-1" flex="1" onchange="commands.ffmpeg_change(this.value)" onclick="commands.ffmpeg_click(this.value)"/>
          <button id="browse" label="&browse;" oncommand="commands.browse();"/>
        </hbox>
        <hbox align="center">
          <label value="&ffmpeg-input1;" />
          <textbox id="ffmpeg-input1" flex="1" onchange="commands.ffmpeg_command1(this.value)"/>
          <button label="&reset;" oncommand="commands.reset1();"/>
        </hbox>
        <hbox align="center">
          <vbox>
            <label value="&ffmpeg-input3;" />
            <label value="&ffmpeg-input3-2;" />
          </vbox>
          <textbox id="ffmpeg-input3" flex="1" onchange="commands.ffmpeg_command3(this.value)"/>
          <button label="&reset;" oncommand="commands.reset3();"/>
        </hbox>
        <hbox align="center" pack="center" class="info" flex="1">
          <label id="ffmpeg-info" value="&drop3;"/>
        </hbox>
        <hbox align="center" pack="center">
          <label id="msg1" value="&msg1;" style="display: none;"/>
        </hbox>        
      </vbox>
      </tabpanel>
      <tabpanel orient="vertical">
        <vbox>
          <hbox align="center">
            <label value="&ffmpeg-path;"/>
            <textbox flex="1" id= "ffmpeg-path-2" onchange="commands.ffmpeg_change(this.value)" onclick="commands.ffmpeg_click(this.value)"/>
            <button label="&browse;" oncommand="commands.browse();"/>
          </hbox>
          <hbox align="center">
            <label value="&ffmpeg-input4;" />
            <textbox id="ffmpeg-input4" flex="1" onchange="commands.ffmpeg_command4(this.value)"/>
            <button label="&reset;" oncommand="commands.reset4();"/>
          </hbox>
        </vbox>
        <hbox flex="1">
          <vbox flex="1" align="center" pack="center"
            ondragenter="return drag4.checkDrag(event)"
            ondragover="return drag4.checkDrag(event)"
            ondrop="drag4.doDrop(event, 1)">
            <label id="video-only" value="&drop4_1;"/>
            <button id="video-only-reset" label="&reset;" collapsed="true" oncommand="commands.reset(1)"/>
          </vbox>
          <toolbarseparator />
          <vbox flex="1" align="center" pack="center"
            ondragenter="return drag4.checkDrag(event)"
            ondragover="return drag4.checkDrag(event)"
            ondrop="drag4.doDrop(event, 2)">
            <label id="audio-only" value="&drop4_2;"/>
            <button id="audio-only-reset" label="&reset;" collapsed="true" oncommand="commands.reset(2)"/>
          </vbox>
        </hbox>
      </tabpanel>
  </tabpanels>
</tabbox>
</notificationbox>
</window>